[include LEDS.cfg]

#############################
# GITHUB BACKUP
#############################

[gcode_macro update_git]
gcode:
  RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
  command: bash /home/biqu/printer_data/klipper-backup/script.sh
  timeout: 90.0
  verbose: True


#############################
# FILAMENT
#############################

[gcode_macro UNLOAD_FILAMENT]
gcode:
 M109 S230
 M83
 G92 E0.0
 G1 E10 f3000       ; 50mm/s speed (f) is in mm/min divide by 60 mm/sec
 G1 E-100 F900      ; 15mm/s speed (f) is in mm/min divide by 60 mm/sec
 G92 E0.0
 M82

[gcode_macro LOAD_FILAMENT]
gcode:
 MOVE_TO_NEUTRAL_POSITION
 M109 S230
 M83
 G92 E0.0
 G1 E100 F300       ; 5mm/s speed (f) is in mm/min divide by 60 mm/sec
 G1 E-5 F3600       ; 60mm/s speed (f) is in mm/min divide by 60 mm/sec
 G92 E0.0
 M82

;[gcode_macro _filament_runout_unload]
;gcode:
;  PAUSE
;  G91               ; Relative positioning
;  G1 E-10 F2100     ; retract 10mm of filament
;  G1 z10            ; move z up 10mm from current position
;  G90               ; absolute positioning
;  G1 x10 y10 F6000  ; park at coordinates
;  M106 S0           ; disable part cooling fan

;[gcode_macro _filament_insert_load]
;gcode:
  
#############################
# MOVEMENT
#############################

[gcode_macro SMARTHOME]
gcode:
    {% if printer.toolhead.homed_axes == "xyz" %}
    {% else %}
        G28
    {% endif %}

[gcode_macro PRESENT_BED]
gcode:
  SMARTHOME
  g90               ; set to absolute positioning
  g1 z100 f3000
  G0 X0 Y280 F7500

[gcode_macro MOVE_TO_NEUTRAL_POSITION]
gcode:
  SMARTHOME
  g90                ; set to absolute positioning
  g1 x150 y150 f9000
  g1 z100 f3000

[gcode_macro LOCK_Z_STEPPERS]
gcode:
  SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1

[gcode_macro UN_LOCK_Z_STEPPERS]
gcode:
  SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0

#############################
# TUNING
#############################

[gcode_macro PID_EXTRUDER]
gcode:
 M106 S255
 {% set TARGET_TEMP = params.TARGET_TEMP|default(210)|float %} 
 PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}

[gcode_macro PID_BED]
gcode:
 {%set TARGET_TEMP = params.TARGET_TEMP|default(70)|float %}
 PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}

[gcode_macro Bed_Mesh]
gcode:
  SMARTHOME
  BED_MESH_CALIBRATE
  g1 z100 f3000

#############################
# FLUIDD.CFG CLIENT VARIABLES
#############################

[gcode_macro _CLIENT_VARIABLE]
gcode:
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 280  ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 50   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor filament"    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
#gcode: